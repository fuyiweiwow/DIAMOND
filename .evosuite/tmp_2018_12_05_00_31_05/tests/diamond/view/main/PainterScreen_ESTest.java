/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 04 16:32:17 GMT 2018
 */

package diamond.view.main;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import diamond.doc.Doc;
import diamond.doc.DocHolder;
import diamond.paint.core.PaintConfig;
import diamond.paint.creasepattern.CreasePattern;
import diamond.view.main.PainterScreen;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import java.awt.image.BufferedImage;
import java.util.Collection;
import java.util.Observable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PainterScreen_ESTest extends PainterScreen_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 128, 128, 128, 16, 128, 128, 128, 16, true, 128, 58, 16, 128);
      mouseWheelEvent0.translatePoint(59, 128);
      painterScreen0.mousePressed(mouseWheelEvent0);
      MouseWheelEvent mouseWheelEvent1 = new MouseWheelEvent(painterScreen0, 10, 10, 423, 16, 16, 10, 16, 4, true, 4, 16, (-1905015856), 16);
      painterScreen0.mouseDragged(mouseWheelEvent1);
      assertFalse(painterScreen0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      painterScreen0.setBounds((-1904943701), 8, (-1904943701), (-1904943701));
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, (-1904943701), (-1904943701), (-2694), 8, 8, false, 8, (-2694), (-1904943701));
      painterScreen0.componentResized(mouseWheelEvent0);
      assertEquals((-2694), mouseWheelEvent0.getXOnScreen());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      painterScreen0.setBounds((-1904943668), 8, 1987, (-1904943668));
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, (-1904943668), (-1904943668), (-1904943668), 1987, 1987, false, 8, (-1904943668), (-1904943668));
      painterScreen0.mouseWheelMoved(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isMetaDown());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      painterScreen0.mouseMoved((MouseEvent) null);
      assertFalse(painterScreen0.getIgnoreRepaint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      // Undeclared exception!
      try { 
        painterScreen0.update((Observable) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      // Undeclared exception!
      try { 
        painterScreen0.mouseReleased((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.mouse.MouseUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      // Undeclared exception!
      try { 
        painterScreen0.mousePressed((MouseEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.mouse.MouseUtility", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 2548, 2548, 3820, 308, 1661, (-261), true, 3820, 1661, 3820);
      PaintConfig.gridDivNum = 1661;
      // Undeclared exception!
      painterScreen0.mouseMoved(mouseWheelEvent0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      Doc doc0 = mock(Doc.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(doc0).getVerticesArea(anyDouble() , anyDouble() , anyDouble());
      DocHolder.setDoc(doc0);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, (-3141), 0L, 0, 0, 0, (-3141), 0, 0, true, 600, 600, (-3141));
      // Undeclared exception!
      try { 
        painterScreen0.mouseMoved(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.paint.geometry.NearestVertexFinder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      BufferedImage bufferedImage0 = new BufferedImage(5, 22, 5);
      Doc doc0 = mock(Doc.class, new ViolatedAssumptionAnswer());
      doReturn((CreasePattern) null).when(doc0).getCreasePattern();
      DocHolder.setDoc(doc0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        painterScreen0.drawVertexRectangles(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.view.main.PainterScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      Observable observable0 = new Observable();
      painterScreen0.update(observable0, (Object) observable0);
      assertTrue(painterScreen0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      BufferedImage bufferedImage0 = new BufferedImage(682, 10, 10);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      painterScreen0.drawVertexRectangles(sunGraphics2D0);
      assertEquals(140, sunGraphics2D0.lcdTextContrast);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      BufferedImage bufferedImage0 = new BufferedImage(682, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        painterScreen0.paintComponent(graphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.view.main.PainterScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, (-1904943668), (-1904943668), (-1904943668), 1987, 1987, false, 8, (-1904943668), (-1904943668));
      painterScreen0.mouseReleased(mouseWheelEvent0);
      assertTrue(painterScreen0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, (-1904943668), (-1904943668), (-1904943668), 1987, 1987, false, 8, (-1904943668), (-1904943668));
      painterScreen0.mouseMoved(mouseWheelEvent0);
      assertFalse(painterScreen0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 10, 10, 423, 16, 16, 10, 16, 10, false, 10, 16, 16, 16);
      // Undeclared exception!
      try { 
        painterScreen0.mouseDragged(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.view.main.PainterScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 113, 113, 113, 16, 113, 113, 113, 16, false, 113, 60, 16, 113);
      mouseWheelEvent0.translatePoint(59, 113);
      painterScreen0.mousePressed(mouseWheelEvent0);
      MouseWheelEvent mouseWheelEvent1 = new MouseWheelEvent(painterScreen0, 10, 10, 59, 16, 60, 10, 16, 16, false, 16, 60, 10, 16);
      painterScreen0.mouseDragged(mouseWheelEvent1);
      assertEquals(16, mouseWheelEvent1.getX());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseEvent mouseEvent0 = new MouseEvent(painterScreen0, 1258, 1258, 2007, 1258, 1258, 1258, false);
      painterScreen0.mousePressed(mouseEvent0);
      painterScreen0.mouseDragged(mouseEvent0);
      assertFalse(painterScreen0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 113, 113, 113, 16, 113, 113, 113, 16, false, 113, 60, 16, 113);
      painterScreen0.mouseDragged(mouseWheelEvent0);
      assertEquals(113, mouseWheelEvent0.getScrollType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, (-4192), (-4192), (-107), (-107), (-4192), (-107), (-107), (-107), true, (-107), (-107), (-22), (-107));
      painterScreen0.mouseClicked(mouseWheelEvent0);
      assertEquals((-4192), mouseWheelEvent0.getID());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, (-1904943668), (-1904943668), (-1904943668), 1987, 1987, false, 8, (-1904943668), (-1904943668));
      // Undeclared exception!
      try { 
        painterScreen0.mouseClicked(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.paint.geometry.NearestVertexFinder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      painterScreen0.setBounds(8, 8, 1987, 8);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, 8, 8, (-2694), 1987, 1987, false, 8, (-2694), 8);
      // Undeclared exception!
      try { 
        painterScreen0.componentResized(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.view.main.PainterScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      painterScreen0.setBounds((-1904943668), 8, 1987, (-1904943668));
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 8, 8, 8, (-1904943668), (-1904943668), (-1904943668), 1987, 1987, false, 8, (-1904943668), (-1904943668));
      painterScreen0.componentResized(mouseWheelEvent0);
      assertFalse(mouseWheelEvent0.isControlDown());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 11, 1961L, 11, 5, 5, (-2965), (-4738), 5, false, 11, 5, (-4738));
      painterScreen0.componentResized(mouseWheelEvent0);
      assertEquals(5, mouseWheelEvent0.getX());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 11, 1961L, 11, 5, 5, (-2965), (-4738), 5, false, 11, 5, (-4738));
      painterScreen0.componentMoved(mouseWheelEvent0);
      assertTrue(mouseWheelEvent0.isShiftDown());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      Image image0 = painterScreen0.getCreasePatternImage();
      assertNull(image0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 11, 1961L, 11, 5, 5, (-2965), (-4738), 5, false, 11, 5, (-4738));
      painterScreen0.componentHidden(mouseWheelEvent0);
      assertFalse(painterScreen0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      // Undeclared exception!
      try { 
        painterScreen0.mouseWheelMoved((MouseWheelEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.view.main.PainterScreen", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, 961, 961, 961, 961, 961, 961, true, 961, 961, 961);
      painterScreen0.mouseExited(mouseWheelEvent0);
      assertTrue(mouseWheelEvent0.isShiftDown());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseEvent mouseEvent0 = new MouseEvent(painterScreen0, 0, 0, (-142), (-142), 0, (-142), true);
      painterScreen0.componentShown(mouseEvent0);
      assertFalse(mouseEvent0.isConsumed());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      ActionEvent actionEvent0 = new ActionEvent("", 1987, "Alt+Ctrl+Alt Graph+Button1+Button2+Button3");
      painterScreen0.actionPerformed(actionEvent0);
      assertEquals(0L, actionEvent0.getWhen());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PainterScreen painterScreen0 = new PainterScreen();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(painterScreen0, (-3141), 0L, 0, 0, 0, (-3141), 0, 0, true, 600, 600, (-3141));
      painterScreen0.mouseEntered(mouseWheelEvent0);
      assertFalse(painterScreen0.isFocusCycleRoot());
  }
}
