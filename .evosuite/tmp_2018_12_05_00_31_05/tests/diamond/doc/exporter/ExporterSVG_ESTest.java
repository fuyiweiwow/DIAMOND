/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 04 16:27:42 GMT 2018
 */

package diamond.doc.exporter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import diamond.doc.Doc;
import diamond.doc.exporter.ExporterSVG;
import diamond.fold.OriFace;
import diamond.fold.OriHalfedge;
import diamond.fold.OriVertex;
import diamond.fold.OrigamiModel;
import diamond.value.OriLine;
import diamond.value.OriPoint;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExporterSVG_ESTest extends ExporterSVG_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Doc doc0 = new Doc();
      try { 
        ExporterSVG.exportModel(doc0, "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Doc doc0 = new Doc();
      // Undeclared exception!
      try { 
        ExporterSVG.exportDotted(doc0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Doc doc0 = new Doc();
      try { 
        ExporterSVG.exportDotted(doc0, "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExporterSVG exporterSVG0 = new ExporterSVG();
      Doc doc0 = new Doc();
      try { 
        exporterSVG0.export(doc0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExporterSVG exporterSVG0 = new ExporterSVG();
      Doc doc0 = new Doc(1784.853);
      try { 
        exporterSVG0.export(doc0, "");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Doc doc0 = new Doc();
      OriLine oriLine0 = new OriLine(0, 0, 9, 0, 1);
      OriLine.Type oriLine_Type0 = OriLine.Type.VALLEY;
      oriLine0.setType(oriLine_Type0);
      doc0.addLine(oriLine0);
      ExporterSVG exporterSVG0 = new ExporterSVG();
      boolean boolean0 = exporterSVG0.export(doc0, "stroke:gray;stroke-width:1;");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Doc doc0 = new Doc(894.2);
      OriLine oriLine0 = new OriLine(0, 307.5778899191, 9, 0, 0);
      oriLine0.typeVal = 2;
      doc0.addLine(oriLine0);
      ExporterSVG exporterSVG0 = new ExporterSVG();
      boolean boolean0 = exporterSVG0.export(doc0, "stroke:gray;stroke-width:1;");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Doc doc0 = new Doc(894.2);
      OriLine oriLine0 = new OriLine(0, 307.5778899191, 9, 65535.0, 0);
      doc0.addLine(oriLine0);
      ExporterSVG exporterSVG0 = new ExporterSVG();
      boolean boolean0 = exporterSVG0.export(doc0, "stroke:gray;stroke-width:1;");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Doc doc0 = new Doc();
      OrigamiModel origamiModel0 = doc0.getOrigamiModel();
      LinkedList<OriFace> linkedList0 = new LinkedList<OriFace>();
      OriFace oriFace0 = new OriFace();
      linkedList0.add(oriFace0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      origamiModel0.setFaces(linkedList0);
      try { 
        ExporterSVG.exportModel(doc0, "5</Mv>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.doc.exporter.ExporterSVG", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Doc doc0 = new Doc();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        ExporterSVG.exportModel(doc0, ",");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Doc doc0 = new Doc(894.2);
      ExporterSVG.exportModel(doc0, "stroke:gray;stroke-width:1;");
      assertEquals(2, Doc.LOWER);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Doc doc0 = new Doc();
      OrigamiModel origamiModel0 = doc0.getOrigamiModel();
      LinkedList<OriFace> linkedList0 = new LinkedList<OriFace>();
      OriFace oriFace0 = new OriFace();
      OriPoint oriPoint0 = new OriPoint();
      OriVertex oriVertex0 = new OriVertex(oriPoint0);
      OriHalfedge oriHalfedge0 = new OriHalfedge(oriVertex0, oriFace0);
      oriFace0.halfedges.add(oriHalfedge0);
      linkedList0.add(oriFace0);
      origamiModel0.setFaces(linkedList0);
      try { 
        ExporterSVG.exportModel(doc0, "5</Mv>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("diamond.doc.exporter.ExporterSVG", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Doc doc0 = new Doc(0.8);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        ExporterSVG.exportDotted(doc0, "ufKh{[OSAuDxhvp{");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Doc doc0 = new Doc(1000.0);
      OriLine oriLine0 = new OriLine(0, 1000.0, 9, 0, 0);
      doc0.addLine(oriLine0);
      ExporterSVG.exportDotted(doc0, "str7ke:gray;scro3-w(dth:1;");
      assertNull(doc0.getMemo());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Doc doc0 = new Doc();
      OriLine oriLine0 = new OriLine(0, 2, 9, 0, 1);
      oriLine0.typeVal = 2;
      doc0.addLine(oriLine0);
      ExporterSVG.exportDotted(doc0, "stroke:gray;stroke-width:1;");
      assertNull(doc0.getMemo());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Doc doc0 = new Doc();
      OriLine oriLine0 = new OriLine(0, 0, 9, 0, 1);
      OriLine.Type oriLine_Type0 = OriLine.Type.VALLEY;
      oriLine0.setType(oriLine_Type0);
      doc0.addLine(oriLine0);
      ExporterSVG.exportDotted(doc0, "stroke:gray;stroke-width:1;");
      assertNull(doc0.getEditorName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExporterSVG exporterSVG0 = new ExporterSVG();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Doc doc0 = new Doc();
      try { 
        exporterSVG0.export(doc0, "(DBi#{");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }
}
